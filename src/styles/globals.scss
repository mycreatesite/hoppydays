@use "./variables";

:root {
  --color-base: #ffe349;
  --color-base-dark: #756200;
  --color-text: #222222;
  --color-text-light: #666666;
  --color-text-gray: #919191;
  --z-index-header: 50;
  --margin-small: calc(80 / 1920 * 100%);
  --margin-large: calc(160 / 1920 * 100%);
}

* {
  box-sizing: border-box;
}

/* html {
  
} */

body {
  color: var(--color-text);
  background-color: var(--color-base);
  margin: 0;
  padding: 0;
  line-height: 2;
  letter-spacing: 0.08em;
}

body.is-paused {
  *, *::after, *::before {
    animation-play-state: paused !important;
    transition: none !important;
  }
  .js-scrollParallax-post, .js-scrollParallax-bubble {
    transform: translate3d(0, 0, 0) !important;
  }
  .js-scrollParallax-slideContainer {
    transform: translate3d(0, 0, 0) !important;
    a, a img {
      transform: scale(1) !important;
      &:hover {
        transform: scale(1) !important;
      }
    }
  }
}

a {
  color: inherit;
  text-decoration: none;
}

button {
  background-color: transparent;
  border: none;
  padding: 0;
  appearance: none;
}

ul,
li {
  list-style: none;
  padding: 0;
  margin: 0;
}

img {
  max-width: 100%;
  height: auto;
}

main {
  min-height: 100svh;
}

.commonContainer {
  padding-left: var(--margin-small);
  padding-right: var(--margin-small);
  @include variables.mq(sp) {
    padding-left: 16px;
    padding-right: 16px;
  }
}
.slideContainer {
  padding-left: 20%;
  padding-right: 20%;
  @include variables.mq(sp) {
    padding-left: 12%;
    padding-right: 12%;
  }
}
.largeContainer {
  position: relative;
  z-index: 1;
  padding-left: var(--margin-large);
  padding-right: var(--margin-large);
  @include variables.mq(sp) {
    padding-left: 16px;
    padding-right: 16px;
  }
}
.smallContainer {
  position: relative;
  z-index: 1;
  margin: 0 auto;
  max-width: 832px;
  padding-left: 16px;
  padding-right: 16px;
}

.onlySP {
  display: none;
  @include variables.mq(sp) {
    display: block;
  }
}

.onlyPC {
  display: block;
  @include variables.mq(sp) {
    display: none;
  }
}

.overFlowHidden {
  overflow: hidden;
}
