@use "../../variables";

.image {
  .cover {
    clip-path: url(#clip);
  }
  img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    aspect-ratio: 768 / 512;
  }
}

.content {
  margin-top: 24px;
  padding: 0 16px;
  @include variables.mq(sp) {
    padding: 0;
    margin-top: 16px;
  }
  .date {
    font-size: 1.125rem;
    color:var(--color-base-dark);
  }
  .title {
    font-size: 1.5rem;
    font-weight: 400;
    line-height: 2;
    @include variables.mq(sp) {
      font-size: 1.125rem;
    }
  }
  .subtitle {
    font-size: 1.125rem;
    @include variables.mq(sp) {
      font-size: .875rem;
    }
  }
  &::after {
    content: '';
    display: block;
    height: 1px;
    width: 80px;
    background-color: var(--color-text);
    margin-top: 32px;
    @include variables.mq(sp) {
      width: 64px;
      margin-top: 16px;
    }
  }
}


.swiper {
  overflow-x: visible;
  .slide {
    width: 100%;
    user-select: none;
    @include variables.mq(pc) {
      width: 80%;
    }
    @include variables.mq(pcxl) {
      width: calc(768 / 1152 * 100%);
    }
  }
}

//animation

.swiper {
  .slide {
    opacity: 0;
    transform: translateX(64px);
    transition: transform 1s, opacity 1s, filter .4s;
    @include variables.mq(sp) {
      transform: translateX(32px);
    }
  }
  [class*="is-active"] & {
    .slide {
      transform: translateX(0);
      opacity: .8;
      filter: grayscale(1);
      &[class*="swiper-slide-active"] {
        filter: grayscale(0);
        opacity: 1;
      }
    }
  }
}

$transition-duration: .5s;

.item {
  display: block;
  transition: transform $transition-duration ease-in-out;
  .image {
    img {
      transition: transform $transition-duration ease-in-out;
    }
  }
  .content {
    &::after {
      transition: transform $transition-duration ease-in-out;
      transform-origin: left;
    }
  }
  &:hover {
    transform: scale(.975);
    .image {
      img {
        transform: scale(1.06);
      }
    }
    .content {
      &::after {
        transform: scaleX(2);
      }
    }
  }
}